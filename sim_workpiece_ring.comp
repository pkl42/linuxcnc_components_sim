component sim_workpiece_ring "Virtuell Workpiece Ring for Probing Simulation";

description
"""
You can define a virtual probe ring and place it into the workarea. The current tool position
including tool diameter correction is compared and pin cmd_pos_inside outputs if tool position
is inside the probe ring body.
""";
pin in float cur_pos_x "Current x-position (typically: joint.n.motor-pos-fb)";
pin in float cur_pos_y "Current y-position (typically: joint.n.motor-pos-fb)";
pin in float cur_pos_z "Current z-position (typically: joint.n.motor-pos-fb)";

param rw float wp_x_pos = 0. "Center X-Position of Ring Workpiece where it is placed";
param rw float wp_y_pos = 0. "Center Y-Position of Ring Workpiece where it is placed";
param rw float wp_z_pos = 0. "lower Z-Position Workpiece is placed";

param rw float wp_z_height = 10. "Height of Workpiece in z direction";
param rw float wp_radius_inside = 20. "Workpiece Inside radius";
param rw float wp_radius_outside = 40. "Workpiece Outside radius";

pin in float tool_offset_z = 10. "Length of tool/touch probe in spindle";
pin in float tool_diameter = 2. "Tool Diameter (halui.tool.diameter/#5410)";

pin out bit  cmd_pos_inside "current position within the workpiece";
pin out bit  cmd_pos_inside_inv "current position within the workpiece - inverted";

param r float version =  1.0 "Version of this component";

function _ fp;
license "GPL";
;;
#include <math.h>
#include <float.h>

static float distance;

FUNCTION(_) {
    float tool_radius=tool_diameter/2.;
	cmd_pos_inside = false;


    if (cur_pos_z <= wp_z_pos + wp_z_height + tool_offset_z){
		distance = sqrt(pow ((cur_pos_x-wp_x_pos ) ,2) + pow( (cur_pos_y - wp_y_pos) ,2));
		if ((distance + tool_radius >= wp_radius_inside) &&
       (distance <= wp_radius_outside + tool_radius )) {
            cmd_pos_inside = true;
		}
	 }

	 cmd_pos_inside_inv = !cmd_pos_inside;

    return;
}
